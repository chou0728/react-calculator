{"version":3,"sources":["components/Button.js","store/actions.js","store/actionTypes.js","components/Tools.js","components/Operators.js","store/reducer.js","store/index.js","components/Display.js","components/NumPad.js","components/Calculator.js","components/Modal.js","App.js","index.js"],"names":["Button","className","style","this","props","id","ID","onClick","handleClick","value","Component","updateDisplay","display","type","DISPLAY","changeArg1","arg1","ARG1","changeArg2","arg2","ARG2","changeOp","op","OP","updateResult","result","RESULT","updateInput","input","INPUT","Tools","handleTools","bind","e","target","innerHTML","eval","console","log","mapStateToProps","state","mapDispatchToProps","dispatch","connect","Operators","handleOperators","previousInput","operator","mathOp","test","Math","round","decodeURI","reducer","action","Object","assign","store","createStore","Display","NumPad","handleNumPad","newDisplay","match","gridArea","alignContent","justifyContent","padding","Calculator","Modal","draggleRef","React","createRef","bounds","left","top","bottom","right","onStart","event","uiData","window","document","documentElement","clientWidth","clientHeight","targetRect","current","getBoundingClientRect","setState","x","y","width","visible","onCancel","onClose","closable","footer","maskClosable","modalRender","modal","ref","children","App","calculatorVisible","openModal","closeModal","background","fontSize","marginTop","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.e3fd4f09.chunk.js","sourcesContent":["import { Component } from 'react'\n\nclass Button extends Component {\n  render() {\n    return (\n      <div\n        className='calc-button'\n        style={this.props.style}\n        id={this.props.ID}\n        onClick={this.props.handleClick}\n      >\n        {this.props.value}\n      </div>\n    )\n  }\n}\n\nexport default Button\n","import { DISPLAY, ARG1, ARG2, OP, RESULT, INPUT } from './actionTypes'\n\nexport const updateDisplay = (display) => {\n  return {\n    type: DISPLAY,\n    display: display\n  }\n}\nexport const changeArg1 = (arg1) => {\n  return {\n    type: ARG1,\n    arg1: arg1\n  }\n}\nexport const changeArg2 = (arg2) => {\n  return {\n    type: ARG2,\n    arg2: arg2\n  }\n}\nexport const changeOp = (op) => {\n  return {\n    type: OP,\n    op: op\n  }\n}\nexport const updateResult = (result) => {\n  return {\n    type: RESULT,\n    result: result\n  }\n}\nexport const updateInput = (input) => {\n  return {\n    type: INPUT,\n    input: input\n  }\n}\n","export const DISPLAY = 'DISPLAY'\nexport const ARG1 = 'ARG1'\nexport const ARG2 = 'ARG2'\nexport const OP = 'OP'\nexport const RESULT = 'RESULT'\nexport const INPUT = 'INPUT'\n","import { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Button from './Button'\nimport {\n  updateDisplay,\n  changeArg1,\n  changeOp,\n  updateResult\n} from '../store/actions'\n\nclass Tools extends Component {\n  constructor(props) {\n    super(props)\n    this.handleTools = this.handleTools.bind(this)\n  }\n  handleTools(e) {\n    switch (true) {\n      case e.target.innerHTML === 'AC':\n        //initialize the calc again\n        this.props.updateDisplay('0')\n        this.props.changeArg1('0')\n        this.props.updateResult('')\n        this.props.changeOp('')\n        break\n      case e.target.innerHTML === '+/-':\n        this.props.updateDisplay(eval(this.props.display * -1))\n        break\n      case e.target.innerHTML === '%':\n        this.props.updateDisplay(eval(this.props.display / 100))\n        break\n      default:\n        console.log('problem with handleTools function')\n        break\n    }\n  }\n  render() {\n    return (\n      <div id='tools' className='calc-section'>\n        <Button ID='clear' value='AC' handleClick={this.handleTools} />\n        <Button ID='sign' value='+/-' handleClick={this.handleTools} />\n        <Button ID='percent' value='%' handleClick={this.handleTools} />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    display: state.display\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateDisplay: (display) => {\n      dispatch(updateDisplay(display))\n    },\n    changeArg1: (arg1) => {\n      dispatch(changeArg1(arg1))\n    },\n    changeOp: (op) => {\n      dispatch(changeOp(op))\n    },\n    updateResult: (result) => {\n      dispatch(updateResult(result))\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Tools)\n","import { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Button from './Button'\nimport {\n  updateDisplay,\n  changeArg1,\n  changeArg2,\n  updateInput\n} from '../store/actions'\n\nclass Operators extends Component {\n  constructor(props) {\n    super(props)\n    this.handleOperators = this.handleOperators.bind(this)\n  }\n  handleOperators(e) {\n    let previousInput = this.props.input\n    let operator = e.target.innerHTML\n    let display = this.props.display\n    let mathOp\n    let result\n    let arg1 = this.props.arg1\n    let arg2 = this.props.arg2\n    let op = this.props.op\n\n    switch (true) {\n      case /[+-]/.test(operator):\n        mathOp = operator\n        //when user inputs a new operator immediately after inputting '=' skip everything.\n        if (/=/.test(previousInput)) {\n          break\n        }\n        if (arg1 !== 0 && op !== '' && !/[/*+-]/.test(previousInput)) {\n          //check to see if the previous value was '='\n          result = Math.round(1000000 * eval(arg1 + op + display)) / 1000000\n          this.props.changeArg1(result)\n          this.props.updateDisplay(result)\n        } else {\n          this.props.changeArg1(display)\n        }\n        break\n      case operator === decodeURI('%C3%B7'):\n        mathOp = '/'\n        if (/=/.test(previousInput)) {\n          break\n        }\n        if (arg1 !== 0 && op !== '' && !/[/*+-]/.test(previousInput)) {\n          result = Math.round(1000000 * eval(arg1 + op + display)) / 1000000\n\n          this.props.changeArg1(result)\n          this.props.updateDisplay(result)\n        } else {\n          this.props.changeArg1(display)\n        }\n        break\n      case operator === 'x':\n        mathOp = '*'\n        if (/=/.test(previousInput)) {\n          break\n        }\n        if (arg1 !== 0 && op !== '' && !/[/*+-]/.test(previousInput)) {\n          result = Math.round(1000000 * eval(arg1 + op + display)) / 1000000\n          this.props.changeArg1(result)\n          this.props.updateDisplay(result)\n        } else {\n          this.props.changeArg1(display)\n        }\n        break\n      case operator === '=':\n        mathOp = operator\n        if (arg1 !== 0 && op !== '' && !/=/.test(previousInput)) {\n          result = Math.round(1000000 * eval(arg1 + op + display)) / 1000000\n          this.props.changeArg1(result)\n          this.props.changeArg2(display)\n          this.props.updateDisplay(result)\n        } else if (arg1 !== 0 && op !== '' && /=/.test(previousInput)) {\n          result = Math.round(1000000 * eval(arg1 + op + arg2)) / 1000000\n          this.props.changeArg1(result)\n          this.props.updateDisplay(result)\n        } else {\n          this.props.changeArg1(display)\n        }\n        break\n      default:\n        console.log('this is the default case for the operator type')\n        break\n    }\n    this.props.updateInput(mathOp)\n  }\n\n  render() {\n    return (\n      <div id='operators' className='calc-section'>\n        <Button ID='divide' value='&#247;' handleClick={this.handleOperators} />\n        <Button ID='multiply' value='x' handleClick={this.handleOperators} />\n        <Button ID='subtract' value='-' handleClick={this.handleOperators} />\n        <Button ID='add' value='+' handleClick={this.handleOperators} />\n        <Button ID='equals' value='=' handleClick={this.handleOperators} />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    display: state.display,\n    arg1: state.arg1,\n    arg2: state.arg2,\n    op: state.op,\n    input: state.input\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateDisplay: (display) => {\n      dispatch(updateDisplay(display))\n    },\n    changeArg1: (arg1) => {\n      dispatch(changeArg1(arg1))\n    },\n    changeArg2: (arg2) => {\n      dispatch(changeArg2(arg2))\n    },\n    updateInput: (input) => {\n      dispatch(updateInput(input))\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Operators)\n","import { DISPLAY, ARG1, ARG2, OP, RESULT, INPUT } from './actionTypes'\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case DISPLAY:\n      return Object.assign({}, state, { display: action.display })\n    case ARG1:\n      return Object.assign({}, state, { arg1: action.arg1 })\n    case ARG2:\n      return Object.assign({}, state, { arg2: action.arg2 })\n    case OP:\n      return Object.assign({}, state, { op: action.op })\n    case RESULT:\n      return Object.assign({}, state, { result: action.result })\n    case INPUT:\n      return Object.assign({}, state, { input: action.input })\n    default:\n      return state\n  }\n}\n\nexport default reducer\n","import { createStore } from 'redux'\nimport reducer from './reducer'\n\nconst initialState = {\n  display: '0',\n  arg1: '0',\n  arg2: '0',\n  op: '',\n  result: '',\n  input: ''\n}\n\nconst store = createStore(reducer, initialState)\n\nexport default store\n","import { Component } from 'react'\n\nclass Display extends Component {\n  render() {\n    return (\n      <div className='item' id='display'>\n        {this.props.display}\n      </div>\n    )\n  }\n}\n\nexport default Display\n","import { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Button from './Button'\nimport { changeOp, updateDisplay, updateInput } from '../store/actions'\n\nclass NumPad extends Component {\n  constructor(props) {\n    super(props)\n    this.handleNumPad = this.handleNumPad.bind(this)\n  }\n  handleNumPad(e) {\n    let display = this.props.display\n    let input = e.target.innerHTML\n    let previousInput = this.props.input\n    let newDisplay\n    let arg1 = this.props.arg1\n\n    //store the operator that was last used\n    if (/[/*+-]/.test(previousInput)) {\n      this.props.changeOp(previousInput)\n    }\n    switch (true) {\n      //when display is '0'\n      case /^0$/.test(display):\n        input.match(/\\./) ? (newDisplay = '0.') : (newDisplay = input)\n        break\n      //when display contains a decimal and user presses decimal button\n      case /\\./.test(display) && input === '.':\n        arg1 === display ? (newDisplay = '0.') : (newDisplay = display)\n        break\n      //all other cases\n      default:\n        arg1 !== 0 && !/[0-9]/.test(previousInput)\n          ? (newDisplay = input)\n          : (newDisplay = display + input)\n        break\n    }\n    this.props.updateDisplay(newDisplay)\n    this.props.updateInput(input)\n  }\n  render() {\n    return (\n      <div id='numPad' className='calc-section'>\n        <Button\n          ID='seven'\n          value='7'\n          style={{ gridArea: 'seven' }}\n          handleClick={this.handleNumPad}\n        />\n        <Button\n          ID='eight'\n          value='8'\n          style={{ gridArea: 'eight' }}\n          handleClick={this.handleNumPad}\n        />\n        <Button\n          ID='nine'\n          value='9'\n          style={{ gridArea: 'nine' }}\n          handleClick={this.handleNumPad}\n        />\n        <Button\n          ID='four'\n          value='4'\n          style={{ gridArea: 'four' }}\n          handleClick={this.handleNumPad}\n        />\n        <Button\n          ID='five'\n          value='5'\n          style={{ gridArea: 'five' }}\n          handleClick={this.handleNumPad}\n        />\n        <Button\n          ID='six'\n          value='6'\n          style={{ gridArea: 'six' }}\n          handleClick={this.handleNumPad}\n        />\n        <Button\n          ID='one'\n          value='1'\n          style={{ gridArea: 'one' }}\n          handleClick={this.handleNumPad}\n        />\n        <Button\n          ID='two'\n          value='2'\n          style={{ gridArea: 'two' }}\n          handleClick={this.handleNumPad}\n        />\n        <Button\n          ID='three'\n          value='3'\n          style={{ gridArea: 'three' }}\n          handleClick={this.handleNumPad}\n        />\n        <Button\n          ID='zero'\n          value='0'\n          style={{\n            gridArea: 'zero',\n            alignContent: 'center',\n            justifyContent: 'flex-start',\n            padding: '0 30px'\n          }}\n          handleClick={this.handleNumPad}\n        />\n        <Button\n          ID='decimal'\n          value='.'\n          style={{ gridArea: 'decimal' }}\n          handleClick={this.handleNumPad}\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    display: state.display,\n    arg1: state.arg1,\n    input: state.input\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateDisplay: (display) => {\n      dispatch(updateDisplay(display))\n    },\n    changeOp: (op) => {\n      dispatch(changeOp(op))\n    },\n    updateInput: (input) => {\n      dispatch(updateInput(input))\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NumPad)\n","import { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Display from './Display'\nimport Tools from './Tools'\nimport Operators from './Operators'\nimport NumPad from './NumPad'\n\nclass Calculator extends Component {\n  render() {\n    return (\n      <div id='calculator'>\n        <Display display={this.props.display} />\n        <div className='item' id='calc-layout'>\n          <Tools />\n          <Operators />\n          <NumPad />\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    display: state.display,\n    arg1: state.arg1,\n    arg2: state.arg2,\n    op: state.op,\n    result: state.result,\n    input: state.input\n  }\n}\nexport default connect(mapStateToProps, null)(Calculator)\n","import React, { Component } from 'react'\nimport { Modal as AntModal } from 'antd'\nimport Draggable from 'react-draggable'\n\nclass Modal extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      bounds: { left: 0, top: 0, bottom: 0, right: 0 }\n    }\n    this.onStart = this.onStart.bind(this)\n  }\n\n  draggleRef = React.createRef()\n\n  onStart(event, uiData) {\n    const { clientWidth, clientHeight } = window?.document?.documentElement\n    const targetRect = this.draggleRef?.current?.getBoundingClientRect()\n    this.setState({\n      bounds: {\n        left: -targetRect?.left + uiData?.x,\n        right: clientWidth - (targetRect?.right - uiData?.x),\n        top: -targetRect?.top + uiData?.y,\n        bottom: clientHeight - (targetRect?.bottom - uiData?.y)\n      }\n    })\n  }\n\n  render() {\n    return (\n      <AntModal\n        width={360}\n        visible={this.props.visible}\n        onCancel={this.props.onClose}\n        closable={false}\n        footer={null}\n        maskClosable={true}\n        modalRender={(modal) => (\n          <Draggable\n            bounds={this.state.bounds}\n            onStart={(event, uiData) => this.onStart(event, uiData)}\n          >\n            <div ref={this.draggleRef}>{modal}</div>\n          </Draggable>\n        )}\n      >\n        {this.props.children}\n      </AntModal>\n    )\n  }\n}\n\nexport default Modal\n","import { Component } from 'react'\nimport './App.scss'\nimport Calculator from './components/Calculator'\nimport Modal from './components/Modal'\nimport Button from './components/Button'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      calculatorVisible: false\n    }\n    this.openModal = this.openModal.bind(this)\n    this.closeModal = this.closeModal.bind(this)\n  }\n  openModal() {\n    this.setState({ calculatorVisible: true })\n  }\n\n  closeModal() {\n    this.setState({ calculatorVisible: false })\n  }\n\n  render() {\n    return (\n      <div id='app'>\n        <Button\n          value='Open Calculator'\n          style={{\n            background: 'black',\n            fontSize: '16px',\n            width: '200px',\n            marginTop: '200px'\n          }}\n          handleClick={this.openModal}\n        />\n        <Modal visible={this.state.calculatorVisible} onClose={this.closeModal}>\n          <Calculator />\n        </Modal>\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport 'antd/dist/antd.css'\nimport store from './store'\nimport App from './App'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}